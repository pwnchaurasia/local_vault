name: Build Mobile App

on:
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3

    - name: Setup Node
      uses: actions/setup-node@v3
      with:
        node-version: '18'

    - name: Setup Expo
      uses: expo/expo-github-action@v8
      with:
        eas-version: latest
        token: ${{ secrets.EXPO_TOKEN }}

    - name: Install dependencies
      run: |
        cd mobile/LocalVault
        npm install

    - name: Build APK
      run: |
        cd mobile/LocalVault
        eas build --platform android --profile preview --non-interactive --wait

    - name: Download and Release APK
      run: |
        cd mobile/LocalVault

        # Wait a moment for build to be processed
        sleep 30

        # Get build list with error handling
        BUILD_LIST=$(eas build:list --platform=android --limit=1 --json --non-interactive 2>/dev/null || echo "[]")

        if [ "$BUILD_LIST" = "[]" ] || [ -z "$BUILD_LIST" ]; then
          echo "No builds found"
          exit 1
        fi

        BUILD_URL=$(echo "$BUILD_LIST" | jq -r '.[0].artifacts.buildUrl // empty')

        if [ -z "$BUILD_URL" ] || [ "$BUILD_URL" = "null" ]; then
          echo "No download URL found"
          exit 1
        fi

        # Download APK
        curl -L "$BUILD_URL" -o localvault-android.apk

        if [ ! -f localvault-android.apk ]; then
          echo "APK download failed"
          exit 1
        fi

        # Create versioned release (v1.0.X)
        gh release create "v1.0.${{ github.run_number }}" \
          localvault-android.apk \
          --title "LocalVault Mobile v1.0.${{ github.run_number }}" \
          --generate-notes || echo "Release already exists, skipping"

        # Update stable 'app-latest' release (overwrite each run)
        gh release delete app-latest -y || true
        gh release create app-latest \
          localvault-android.apk \
          --title "LocalVault Mobile (Latest)" \
          --notes "Always points to the latest successful build"
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
